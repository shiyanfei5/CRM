<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yfshi.crm.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.yfshi.crm.domain.Employee" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="inputtime" property="inputtime" jdbcType="DATE" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="admin" property="admin" jdbcType="BIT" />
    <association property="dept" javaType="com.yfshi.crm.domain.Department"
                 columnPrefix="dept_" >
      <id column="id" property="id" />
      <result column="name" property="name" />
    </association>
  </resultMap>
  <sql id = "fieldSql">
    e.id, e.username, e.realname, e.password, e.tel, e.email, e.inputtime, e.state, e.admin,
    d.id as dept_id, d.name as dept_name
  </sql>
  <sql id = "conditionSql">

  </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yfshi.crm.domain.Employee" useGeneratedKeys="true" keyProperty="id" >
    insert into employee (username, realname, password, 
      tel, email, dept_id, 
      inputtime, state, admin)
    values (#{username,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{dept.id,jdbcType=BIGINT},
      #{inputtime,jdbcType=DATE}, #{state,jdbcType=BIT}, #{admin,jdbcType=BIT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yfshi.crm.domain.Employee" >
    update employee
    set username = #{username,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      dept_id = #{dept.id,jdbcType=BIGINT},
      inputtime = #{inputtime,jdbcType=DATE},
      state = #{state,jdbcType=BIT},
      admin = #{admin,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select  <include refid="fieldSql"/>
    from employee e left join department d on d.id = e.dept_id
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select<include refid="fieldSql"/>
    from employee
  </select>
  
  <select id="queryByConditionCount">
    select count(*) from employee e <include refid="conditionSql"/>
  </select>
  <select id="queryByCondition" resultMap="BaseResultMap">
    select <include refid="fieldSql"/>
    from employee e left join department d on d.id = e.dept_id
    <include refid="conditionSql"/>
    <if test="page!=null and page!=''">
        limit #{start},#{rows}
    </if>


  </select>


</mapper>